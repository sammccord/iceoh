(function(o,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(o=typeof globalThis<"u"?globalThis:o||self,c(o.Iceoh={}))})(this,function(o){"use strict";var k=Object.defineProperty;var X=(o,c,x)=>c in o?k(o,c,{enumerable:!0,configurable:!0,writable:!0,value:x}):o[c]=x;var l=(o,c,x)=>(X(o,typeof c!="symbol"?c+"":c,x),x);const c=Math.atan(.5),x=Math.PI/6,A=Math.PI/4,P={x:0,y:0},T={x:.5,y:.5},v={x:1,y:1};var W=(r=>(r.NONE="NONE",r.N="N",r.NE="NE",r.E="E",r.SE="SE",r.S="S",r.SW="SW",r.W="W",r.NW="NW",r))(W||{});function j(r){const i=[];for(const e of Array.from(r.keys()).sort()){const t=r.get(e);for(const s of Array.from(t.keys()).sort()){const n=t.get(s);for(const h of Array.from(n.keys()).sort())i.push(n.get(h))}}return i}function y(r,i,e){let t=r;for(;i.length-1;){var s=i.shift();let n=t.get(s);if(n===void 0){const h=new Map;t.set(s,h),t=h}else t=n}return t.set(i[0],e),e}function w(r,i,e){for(var t=r;i.length;){var s=i.shift();let n=t.get(s);if(n===void 0){if(e&&!i.length)return t.set(s,e),e;if(e)n=new Map,t.set(s,n);else return}t=n}return t}function _(r,i){return w(r,[i.z||0,i.x,i.y])}function S(r,i){let e=r;for(;i.length-1;){var t=i.shift();let s=e.get(t);if(s===void 0)return!1;e=s}return e.delete(i[0])}function H(r,i){return Math.sqrt((i.x-r.x)*(i.x-r.x)+(i.y-r.y)*(i.y-r.y))}function B(r){return{x:O(r.map(i=>i.x))/r.length,y:O(r.map(i=>i.y))/r.length}}function O(r){return r.reduce((i,e)=>e?i+e:i,0)}const u=0;function N(r,i){let e=i.x-r.x,t=i.y-r.y;return e===u&&t<u?"N":e>u&&t<u?"NE":e>u&&t===u?"E":e>u&&t>u?"SE":e===u&&t>u?"S":e<u&&t>u?"SW":e<u&&t===u?"W":e<u&&t<u?"NW":"NONE"}class C{constructor({worldOrigin:i,baseTileOrigin:e,baseTileDimensions:t,getScreenDimensions:s,getWorldPosition:n,getWorldScale:h}={}){l(this,"getScreenDimensions");l(this,"getWorldPosition");l(this,"getWorldScale");l(this,"baseTileDimensions");l(this,"worldOrigin",T);l(this,"baseTileOrigin",T);l(this,"map",new Map);l(this,"bounds",{x:{min:0,max:0},y:{min:0,max:0},z:{min:0,max:0}});this.worldOrigin=i||T,this.baseTileOrigin=e||T,this.baseTileDimensions=t||{width:1,height:1},this.getScreenDimensions=s||(()=>({width:1,height:1})),this.getWorldPosition=n||(()=>P),this.getWorldScale=h||(()=>v)}add(i,e,t=this.baseTileDimensions,s=this.baseTileOrigin){return y(this.map,[e.z||0,e.x,e.y],i),this.recalculateBounds(e),this.toWorldPoint(e,t,s)}get(i){return _(this.map,i)}getColumn(i,e){const t=[];for(const[s,n]of e||this.map)t[s]=w(n,[i.x,i.y]);return t}move(i,e,t=this.baseTileDimensions,s=this.baseTileOrigin,n){const h=this.remove(i);if(!(!h||!n))return this.add(h||n,e,t,s)}remove(i){i.z===void 0&&(i.z=0);const e=this.get(i);if(!!e)return S(this.map,[i.z||0,i.x,i.y]),this.recalculateBounds(i),e}toScreenPoint(i,e=this.baseTileDimensions,t=this.baseTileOrigin){const s=this.toWorldPoint(i,e,t),n=this.getWorldScale(),h=this.getWorldPosition();return s.x=s.x*n.x+h.x,s.y=s.y*n.y+h.y,s}toWorldPoint(i,e=this.baseTileDimensions,t=this.baseTileOrigin){return this._project(this._getAbsolutePosition(i),e,t)}worldToTile(i,e=this.baseTileDimensions,t=this.baseTileOrigin){const s=this._unproject(i);return{x:Math.round(s.x/e.width),y:Math.round(s.y/e.height),z:i.z||0}}centerToTile(i){return this.centerToPoint(this.toScreenPoint(i))}centerToPoint(i){const e=this.getScreenDimensions(),t=this.getWorldPosition();return{x:t.x+e.width/2-i.x,y:t.y+e.height/2-i.y}}get centerTile(){return this.getBounds()}center(){return this.centerToTile(this.centerTile)}getBounds(){const i={x:0,y:0,width:this.bounds.x.max-this.bounds.x.min,height:this.bounds.y.max-this.bounds.y.min,depth:this.bounds.z.max-this.bounds.z.min};return i.x=Math.round(this.bounds.x.min+i.width/2),i.y=Math.round(this.bounds.y.min+i.height/2),i}recalculateBounds(i){i.x<this.bounds.x.min&&(this.bounds.x.min=i.x),i.x>this.bounds.x.max&&(this.bounds.x.max=i.x),i.y<this.bounds.y.min&&(this.bounds.y.min=i.y),i.y>this.bounds.y.max&&(this.bounds.y.max=i.y),i.z!==void 0&&(i.z<this.bounds.z.min&&(this.bounds.z.min=i.z),i.z>this.bounds.z.max&&(this.bounds.z.max=i.z))}_project(i,e=this.baseTileDimensions,t=this.baseTileOrigin,s=0){const{width:n,height:h}=this.getScreenDimensions();return{x:i.x+n*this.worldOrigin.x,y:i.y+h*this.worldOrigin.y,z:i.z||0}}_unproject(i,e={x:0,y:0,z:0}){const{width:t,height:s}=this.getScreenDimensions();return e.x=i.x-t*this.worldOrigin.x,e.y=i.y-s*this.worldOrigin.y+(i.z||0),e.z=i.z||0,e}_getAbsolutePosition(i,e=this.baseTileDimensions,t=this.baseTileOrigin){return{x:e.width*i.x,y:e.height*i.y,z:i.z||0}}}class Y extends C{constructor({angle:e=c,clamp:t=!0,...s}={angle:c,clamp:!0}){super({...s});l(this,"angle");l(this,"angleCos");l(this,"angleSin");l(this,"clamp");l(this,"baseOrigin");l(this,"baseSurfaceHeight");l(this,"baseSurfaceHalfHeight");l(this,"tileDimensions",new Map);this.angle=e,this.angleCos=Math.cos(this.angle),this.angleSin=Math.sin(this.angle),this.clamp=t,this.baseOrigin={x:this.baseTileDimensions.width*this.baseTileOrigin.x,y:this.baseTileDimensions.height*this.baseTileOrigin.y},this.baseSurfaceHeight=this.baseTileDimensions.height-(this.baseTileDimensions.depth||1),this.baseSurfaceHalfHeight=this.baseSurfaceHeight/2}get baseDepth(){return this.baseTileDimensions.depth||1}add(e,t,s=this.baseTileDimensions,n=this.baseTileOrigin){const h=this.toWorldPoint(t,s,n);if(s!==this.baseTileDimensions){let d=(s.depth||this.baseDepth)/this.baseDepth;for(let a=d,g=t.z||0;a>0;a--,g++)a>1?y(this.tileDimensions,[g,t.x,t.y],{...s,origin:n,depth:this.baseDepth,z:g,x:h.x,y:h.y,value:e}):y(this.tileDimensions,[g,t.x,t.y],{...s,origin:n,depth:this.baseDepth*a,z:g,x:h.x,y:h.y,value:e}),y(this.map,[g,t.x,t.y],t)}else y(this.tileDimensions,[t.z||0,t.x,t.y],{...s,origin:n,z:t.z||0,x:h.x,y:h.y,value:e}),y(this.map,[t.z||0,t.x,t.y],t);return this.recalculateBounds(t),h}remove(e){const t=this.get(e);if(!!t){for(const[s,n]of this.map)try{w(n,[e.x,e.y])===t&&(S(this.tileDimensions,[s,e.x,e.y]),S(this.map,[s,e.x,e.y]))}catch{}return this.recalculateBounds(e),t}}worldToTile(e,t=this.baseTileDimensions,s=this.baseTileOrigin){const n=this._unproject(e),h={x:t.width*s.x,y:t.width*s.y};return n.x=Math.floor((n.x+h.x)/h.x),n.y=Math.floor((n.y+h.y)/h.y),n.z=n.z||0,n}toWorldPoint(e,t=this.baseTileDimensions,s=this.baseTileOrigin){return this._project(this._getAbsolutePosition(e),t,s,O(this.getDimensionsColumn(e).map(n=>(n==null?void 0:n.depth)||this.baseTileDimensions.depth).slice(1,e.z||0)))}getDimensionsColumn(e){return this.getColumn(e,this.tileDimensions)}castRay(e,t){const s=this.worldToTile(e);for(let n=this.bounds.z.max;n>=this.bounds.z.min;n--){const h=s.x+n,d=s.y+n;for(let a of this.getDimensionsColumn({x:h,y:d}).reverse()){if(!a)continue;const{x:g,y:z,value:f,origin:m,width:D,height:M,tile:b}=a;if(e.x>=g-D*m.x&&e.x<=g+D*m.x&&e.y>=z-M*m.y&&e.y<=z+M*m.y)if(t){if(t(f,b))return f}else return f}}}collisionMap(e,t){const s=new Map,n=this.worldToTile(e);for(let h=this.bounds.z.min;h<=this.bounds.z.max;h++){let d=!1;const a=n.x+h,g=n.y+h;for(let z of this.getDimensionsColumn({x:a,y:g})){if(!z)continue;const{x:f,y:m,value:D,z:M,origin:b,width:E,height:L,tile:F}=z;if(e.x>=f-E*b.x&&e.x<=f+E*b.x&&e.y>=m-L*b.y&&e.y<=m+L*b.y){if(t&&!t(D,F))continue;d=!0,y(s,[M||0,a,g],D)}else if(d)break}}return s}_project(e,t=this.baseTileDimensions,s=this.baseTileOrigin,n=0){const{width:h,height:d}=this.getScreenDimensions(),a={x:(e.x-e.y)*this.angleCos+h*this.worldOrigin.x,y:(e.x+e.y)*this.angleSin+d*this.worldOrigin.y,z:(e.x+e.y)*((e.z||0)+1||1)};return t!==this.baseTileDimensions?(a.y-=this.baseSurfaceHalfHeight+0-this.baseTileOrigin.y,a.y+=t.height*s.y-(t.height-(t.height-(t.depth||0))/2),a.y-=n):a.y-=this.baseDepth*(e.z||0),this.clamp&&(a.x=~~(a.x+(a.x>0?.5:-.5)),a.y=~~(a.y+(a.y>0?.5:-.5))),a}_unproject(e,t={x:0,y:0,z:0}){const s=this.getScreenDimensions(),n=e.x-s.width*this.worldOrigin.x,h=e.y-s.height*this.worldOrigin.y;return t.x=n/(2*this.angleCos)+h/(2*this.angleSin),t.y=-(n/(2*this.angleCos))+h/(2*this.angleSin),t.z=e.z||0,t}_getAbsolutePosition(e,t=this.baseTileDimensions,s=this.baseTileOrigin){return{x:t.width*s.x*e.x,y:t.height*s.y*e.y,z:e.z||0}}}o.CLASSIC=c,o.DIRECTION=W,o.FULL=v,o.ISOMETRIC=x,o.IsoTilemap=Y,o.MIDDLE=T,o.MILITARY=A,o.TOP_LEFT=P,o.Tilemap=C,o.collectRay=j,o.get=w,o.getCenter=B,o.getDirection=N,o.getDistance=H,o.pointGet=_,o.remove=S,o.set=y,o.sum=O,Object.defineProperties(o,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
