"use strict";var d=Object.defineProperty;var S=(x,o,e)=>o in x?d(x,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):x[o]=e;var r=(x,o,e)=>(S(x,typeof o!="symbol"?o+"":o,e),e);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const w=require("./Tilemap.umd.js"),l=require("./utils.umd.js");class C extends w.Tilemap{constructor({angle:e=l.CLASSIC,clamp:s=!0,...h}={angle:l.CLASSIC,clamp:!0}){super({...h});r(this,"angle");r(this,"angleCos");r(this,"angleSin");r(this,"clamp");r(this,"baseOrigin");r(this,"baseSurfaceHeight");r(this,"baseSurfaceHalfHeight");r(this,"tileDimensions",new Map);this.angle=e,this.angleCos=Math.cos(this.angle),this.angleSin=Math.sin(this.angle),this.clamp=s,this.baseOrigin={x:this.baseTileDimensions.width*this.baseTileOrigin.x,y:this.baseTileDimensions.height*this.baseTileOrigin.y},this.baseSurfaceHeight=this.baseTileDimensions.height-(this.baseTileDimensions.depth||1),this.baseSurfaceHalfHeight=this.baseSurfaceHeight/2}get baseDepth(){return this.baseTileDimensions.depth||1}add(e,s,h=this.baseTileDimensions,t=this.baseTileOrigin){const i=this.toWorldPoint(s,h,t);if(h!==this.baseTileDimensions){let y=(h.depth||this.baseDepth)/this.baseDepth;for(let n=y,a=s.z||0;n>0;n--,a++)n>1?l.set(this.tileDimensions,[a,s.x,s.y],{...h,origin:t,depth:this.baseDepth,z:a,x:i.x,y:i.y,value:e}):l.set(this.tileDimensions,[a,s.x,s.y],{...h,origin:t,depth:this.baseDepth*n,z:a,x:i.x,y:i.y,value:e}),l.set(this.map,[a,s.x,s.y],s)}else l.set(this.tileDimensions,[s.z||0,s.x,s.y],{...h,origin:t,z:s.z||0,x:i.x,y:i.y,value:e}),l.set(this.map,[s.z||0,s.x,s.y],s);return this.recalculateBounds(s),i}remove(e){const s=this.get(e);if(!!s){for(const[h,t]of this.map)try{l.get(t,[e.x,e.y])===s&&(l.remove(this.tileDimensions,[h,e.x,e.y]),l.remove(this.map,[h,e.x,e.y]))}catch{}return this.recalculateBounds(e),s}}worldToTile(e,s=this.baseTileDimensions,h=this.baseTileOrigin){const t=this.screenUnproject(e),i={x:s.width*h.x,y:s.width*h.y};return t.x=Math.floor((t.x+i.x)/i.x),t.y=Math.floor((t.y+i.y)/i.y),t.z=t.z||0,t}toWorldPoint(e,s=this.baseTileDimensions,h=this.baseTileOrigin){return this.screenProject(this.getAbsolutePosition(e),s,h,l.sum(this.getDimensionsColumn(e).map(t=>(t==null?void 0:t.depth)||this.baseTileDimensions.depth).slice(1,e.z||0)))}getDimensionsColumn(e){return this.getColumn(e,this.tileDimensions)}castRay(e,s){const h=this.worldToTile(e);for(let t=this.bounds.z.max;t>=this.bounds.z.min;t--){const i=h.x+t,y=h.y+t;for(let n of this.getDimensionsColumn({x:i,y}).reverse()){if(!n)continue;const{x:a,y:b,value:c,origin:g,width:m,height:f,tile:u}=n;if(e.x>=a-m*g.x&&e.x<=a+m*g.x&&e.y>=b-f*g.y&&e.y<=b+f*g.y)if(s){if(s(c,u))return c}else return c}}}collisionMap(e,s){const h=new Map,t=this.worldToTile(e);for(let i=this.bounds.z.min;i<=this.bounds.z.max;i++){let y=!1;const n=t.x+i,a=t.y+i;for(let b of this.getDimensionsColumn({x:n,y:a})){if(!b)continue;const{x:c,y:g,value:m,z:f,origin:u,width:T,height:D,tile:z}=b;if(e.x>=c-T*u.x&&e.x<=c+T*u.x&&e.y>=g-D*u.y&&e.y<=g+D*u.y){if(s&&!s(m,z))continue;y=!0,l.set(h,[f||0,n,a],m)}else if(y)break}}return h}project(e,s=this.baseTileDimensions,h=this.baseTileOrigin,t=0){const i={x:(e.x-e.y)*this.angleCos,y:(e.x+e.y)*this.angleSin,z:(e.x+e.y)*((e.z||0)+1||1)};return s!==this.baseTileDimensions?(i.y-=this.baseSurfaceHalfHeight+0-this.baseTileOrigin.y,i.y+=s.height*h.y-(s.height-(s.height-(s.depth||0))/2),i.y-=t):i.y-=this.baseDepth*(e.z||0),this.clamp&&(i.x=~~(i.x+(i.x>0?.5:-.5)),i.y=~~(i.y+(i.y>0?.5:-.5))),i}screenProject(e,s=this.baseTileDimensions,h=this.baseTileOrigin,t=0){const{width:i,height:y}=this.getScreenDimensions(),n={x:(e.x-e.y)*this.angleCos+i*this.worldOrigin.x,y:(e.x+e.y)*this.angleSin+y*this.worldOrigin.y,z:(e.x+e.y)*((e.z||0)+1||1)};return s!==this.baseTileDimensions?(n.y-=this.baseSurfaceHalfHeight+0-this.baseTileOrigin.y,n.y+=s.height*h.y-(s.height-(s.height-(s.depth||0))/2),n.y-=t):n.y-=this.baseDepth*(e.z||0),this.clamp&&(n.x=~~(n.x+(n.x>0?.5:-.5)),n.y=~~(n.y+(n.y>0?.5:-.5))),n}unproject(e,s={x:0,y:0,z:0}){return s.x=e.x/(2*this.angleCos)+e.y/(2*this.angleSin),s.y=-(e.x/(2*this.angleCos))+e.y/(2*this.angleSin),s.z=e.z||0,s}screenUnproject(e,s={x:0,y:0,z:0}){const h=this.getScreenDimensions(),t=e.x-h.width*this.worldOrigin.x,i=e.y-h.height*this.worldOrigin.y;return s.x=t/(2*this.angleCos)+i/(2*this.angleSin),s.y=-(t/(2*this.angleCos))+i/(2*this.angleSin),s.z=e.z||0,s}getAbsolutePosition(e,s=this.baseTileDimensions,h=this.baseTileOrigin){return{x:s.width*h.x*e.x,y:s.height*h.y*e.y,z:e.z||0}}}exports.IsoTilemap=C;
